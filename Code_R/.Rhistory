corstars(temp, "spearman", removeTriangle = "upper", result = "latex" )
}
#tf-idf scores
for(ii in idf_scores){
print(ii)
temp <- df_merged %>% filter(score == ii) %>% select(Overall, E, S, G)
corstars(temp, "spearman", removeTriangle = "upper", result = "latex" )
}
df_aggregated_scores <-  df_aggregated_scores %>%
group_by(year, type, score) %>%
summarise(value =  mean(value))
df_aggregated_scores$type <- factor(df_aggregated_scores$type, levels=c("Overall","E", "S", "G"))
df_aggregated_scores$score <- factor(df_aggregated_scores$score, levels=c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score",  "sentim_TF_LM_score","sentim_LM_score"))
df_aggregated_scores %>% ggplot(aes(x = year, y = value, color = type, group = type)) +
geom_line() +
geom_smooth(se = F, method = "lm")+
facet_wrap(~score, scales = "free", ncol = 1,
labeller = scores_labeller
) +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank())+
scale_color_manual(values = c("grey50", "#00BA38" , "#619CFF","#F8766D")) +
labs(#title = "Mean Scores over Time"
x = " ", y = " ")
ggsave(filename = "../Plots/mean_scores_year.png", width = 7, height = 15, bg = "white")
df_merged <- readRDS("../Data/scores_yearly_matched.RDS") %>% drop_na(asset4)
results <- NULL
for(jj in esg_dimensions){
temp2 <- df_merged %>% filter(type == jj)
for(mm in scores){
temp3 <- temp2 %>% filter(score == mm)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
res <- tibble( score = mm
, type = jj
, cor = temp_cor$estimate
#, CI_low = temp_cor$conf.int[1]
#, CI_high =  temp_cor$conf.int[2]
, p = temp_cor$p.value)
results <- bind_rows(res, results)
}
}
results$type <- factor(results$type, levels=c("Overall", "E", "S", "G"))
results %>% mutate(star = case_when(p <= 0.01 ~ "***"
,p > 0.01 & p <= 0.05 ~ "**"
,p > 0.05 & p <= 0.1 ~ "*"
,TRUE ~ " "
)
, rho = paste0(round(cor,2)," ", star)
) %>%
select(score, type, rho) %>% pivot_wider(names_from = type, values_from = rho) %>%
select(score, Overall, E, S, G) %>% mutate(id = c(4,3,6,5,2,1)) %>% arrange(id) %>% select(-id) %>%
startup(.,type = "latex", summary = F, rownames = F) %>%
cat(.)
df_merged <- readRDS("../Data/scores_yearly_matched.RDS") %>% drop_na(asset4, ind_desc)
results <- NULL
for(jj in esg_dimensions){
temp2 <- df_merged %>% filter(type == jj)
for(mm in scores){
temp3 <- temp2 %>% filter(score == mm)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
res <- tibble( score = mm
, type = jj
, cor = temp_cor$estimate
, CI_low = temp_cor$conf.int[1]
, CI_high =  temp_cor$conf.int[2]
, p = temp_cor$p.value)
results <- bind_rows(res, results)
}
}
results$type <- factor(results$type, levels=c("Overall", "E", "S", "G"))
results %>% mutate(star = case_when(p <= 0.01 ~ "***"
,p > 0.01 & p <= 0.05 ~ "**"
,p > 0.05 & p <= 0.1 ~ "*"
,TRUE ~ " "
)
, rho = paste0(round(cor,2)," ", star)
) %>%
select(score, type, rho) %>% pivot_wider(names_from = type, values_from = rho) %>%
select(score, Overall, E, S, G) %>% mutate(id = c(4,3,6,5,2,1)) %>% arrange(id) %>% select(-id) %>%
startup(.,type = "latex", summary = F, rownames = F) %>%
cat(.)
# By FF 12 industry --------------------------------------------------------------------
df_merged <- df_merged %>% filter(!is.na(ind_desc))
results <- NULL
for( ii in unique(df_merged$ind_desc)){
temp <- df_merged %>% filter(ind_desc == ii)
for(mm in c("tf_score", "tf_idf_score", "sentim_score", "sentim_LM_score", "sentim_TF_score", "sentim_TF_LM_score")){
temp3 <- temp %>% filter(score == mm)
n = nrow(temp3)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
#ci <- spearman_CI(temp_cor$estimate,n)
res <- tibble(ind_desc = ii
, score = mm
, type = "all"
, cor = temp_cor$estimate
#, CI_low = ci[1]
#, CI_high =  ci[2]
#, p = temp_cor$p.value
)
results <- bind_rows(res, results)}
for(jj in c("Overall","E", "S", "G")){
temp2 <- temp %>% filter(type == jj)
for(mm in c("tf_score", "tf_idf_score", "sentim_score", "sentim_LM_score", "sentim_TF_score", "sentim_TF_LM_score")){
temp3 <- temp2 %>% filter(score == mm)
n <- nrow(temp3)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
#ci <- spearman_CI(cor = temp_cor$estimate, n = n)
res <- tibble(ind_desc = ii
, score = mm
, type = jj
, cor = temp_cor$estimate
#, CI_low = ci[1]
#, CI_high =  ci[2]
#, p = temp_cor$p.value
)
results <- bind_rows(res, results)
}
}
}
results$type <- factor(results$type, levels=c("all","Overall", "E", "S", "G"))
results <- results %>% filter(!(score %in% c("sentim_LM_score", "sentim_TF_LM_score")))
results$score <- factor(results$score, levels = c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score"))
score_names <- c("tf_score", "tfidf_score"
, expression(paste("sentim_tf_score"^{"(FB)"}))
,expression(paste("sentim_tfidf_score"^{"(FB)"})) )
results %>% filter(type == "all") %>%
mutate(type = "All") %>%
ggplot(aes(x = cor, y = reorder(ind_desc,cor), fill = score  )   )+
geom_bar( stat = "identity", position = "dodge") +
#geom_errorbar(aes(xmin= CI_low, xmax= CI_high), position = position_dodge(.9), width = 0.5, size=.1, alpha = .5)+
facet_wrap(~type, scales = "free") +
labs(x = "Spearman Correlation", y = "" ) +
geom_vline(xintercept = 0, linetype = "dashed" ) +
scale_fill_hue(labels = score_names) +
theme_bw(base_size = 18) +
theme(legend.title = element_blank(), legend.text.align = 0)
ggsave("../Plots/ff12_all.png", width = 14, height= 7)
results %>% filter(type != "all") %>%  ggplot(aes(x = cor, y = reorder(ind_desc,cor), fill = score  )   )+
geom_bar( stat = "identity", position = "dodge") +
#geom_errorbar(aes(xmin= CI_low, xmax= CI_high), position = position_dodge(.9), width = 0.5, size=.1, alpha = .3)+
geom_vline(xintercept = 0, linetype = "dashed" ) +
facet_wrap(~type, scales = "free", ncol = 1) +
labs(x = "Spearman Correlation", y = "" ) +
scale_fill_hue(labels = score_names) +
theme_bw(base_size = 18) +
theme(legend.title = element_blank(), legend.text.align = 0)
ggsave("../Plots/sp_ff12_category.png", width = 15, height= 25)
readxl::read_excel("../Data/berg_draft5.xlsx", sheet = 1, skip = 4) %>%
mutate(across(everything(), ~ ifelse(is.na(.),0,. )      )) %>%
rename(Category = 1, `Vigeo Eiris` = 3) %>%
mutate(Category = str_squish(Category)) %>%
slice(1:66) %>%
stargazer(., type = "latex", summary = F, rownames = F)
readxl::read_excel("../Data/berg_draft5.xlsx", sheet = 2) %>%
select(`Taxonomy Category` = 2, `Final ESG Category` = AutoCategory, Sustainalytics, Asset4, `Vigeo Eiris` = `Vigeo  Eiris`, KLD) %>%
filter( `Final ESG Category` != 0 ) %>%
stargazer(., type = "latex", summary = F, rownames = F
# , notes = "This table shows the ESG classification of the Berg et al (2019) illustration for four providers and the resulting final classifcation. The values represent the different ESG dimensions of the providers, i.e. 'E' = environmental, 'S' = social, 'G' = governance, 'Ec' = economic[CHECK] (only Asset4), 'F' = financial (only KLD[CHECK]) "
)
readxl::read_excel("../Data/berg_draft5.xlsx", sheet = 3)%>% rename(Taxonomy = 1, Extensions = 3, use = 4) %>% mutate(seed_words = case_when(use == 0 ~ NA_character_,
use == 1 ~ Taxonomy,
use == 2 ~ Extensions,
use == 3 ~ paste(Taxonomy, Extensions, sep = ", ")
)
#,seed_words = str_replace(seed_words, "\\s\\s+, ' ')", " ")
, seed_words = str_to_lower(seed_words)
, seed_words = str_squish(seed_words)
, seed_words = str_replace_all(seed_words, "\\b\\s+\\b", "_")
, Taxonomy = str_squish(Taxonomy)
) %>% select(Taxonomy, Category, seed_words) %>% arrange(Category) %>% filter(!is.na(seed_words)) %>%
stargazer(., type = "latex", summary = F, rownames = F)
# full seed words
df <- readxl::read_excel("../Data/berg_draft5.xlsx", sheet = 3)%>% rename(term1 = 1, term2 = 3, use = 4) %>% filter(use >0) %>%
pivot_longer(cols = starts_with("term")) %>% filter(!is.na(value), !(use == 2 & name == "term1")) %>% select(-c(name,use, Comment))
# Count seedwords per category
df %>% count(Category)
df <- df %>%  separate_rows(value, sep = ", " ) %>%
mutate(value= str_to_lower(value), value = str_replace_all(value,"  ", "_"),  value = str_replace_all(value," ", "_") )
# Load unique trigram tokens
unique_tokens <- fst::read_fst("../Data/tokens_trigram.fst", columns = "term") %>% pull(term) %>% unique(.)
# Load unique trigram tokens
unique_tokens <- fst::read_fst("../Data/tokens.fst", columns = "term") %>% pull(term) %>% unique(.)
seed_words <- df %>% pull(value)
idx <-  seed_words %in% unique_tokens
df_new <- df[idx,]
# Count actual seed words
df_new %>% group_by(Category) %>% count()
# Actual seedwords
df_new %>% group_by(Category) %>%
mutate(id = row_number() ) %>%
ungroup() %>%  pivot_wider(names_from = "Category", values_from = "value") %>% select(E, S, G) %>%
stargazer(., type = "latex", summary = F, rownames = F)
readxl::read_excel("../Data/berg_draft5.xlsx", sheet = 3) %>% filter(Rating == 0) %>%
select(Taxonomy = Taxomony, Comment) %>%
stargazer(., type = "latex", summary = F, rownames = F)
library(tidyverse)
library(RPostgres)
library(lubridate)
library(stargazer)
library(sandwich)
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user='arodloff')
# Load Data ---------------------------------------------------------------
ESG_dimensions <- c("Overall", "E", "S", "G")
# Fama-French 3 Factors
ff_url <- "https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/F-F_Research_Data_Factors_CSV.zip"
temp_file <- tempfile()
download.file(ff_url, temp_file)
ff3_factors <- read_csv(unzip(temp_file), skip = 3) %>%
rename(date = 1)%>%
mutate(date = ym(paste0(date))) %>%
drop_na(date) %>%
#filter(date %in% seq(2003,2021)) %>%
mutate(across(-date, ~./100))
m_crsp = dbSendQuery(conn = wrds, statement =
"select  a.permno, a.date, a.ret,
b.ticker
from crsp.msf as a
left join crsp.msenames as b
on a.permno=b.permno
and b.namedt<=a.date
and a.date<=b.nameendt
where date >= '2002-01-01'
and   date <= '2021-12-31'
"
) %>%
# Pull data
dbFetch(n = -1) %>% as_tibble() %>% drop_na(ret) %>% mutate(year = year(date) )
dbDisconnect(wrds)
# Matched scores
df_merged<- readRDS("../Data/scores_yearly_matched.RDS") %>%
mutate(ticker = ticker_og) %>%
select(-ticker_og) %>%
drop_na(asset4, ind_desc) %>% filter(score == "sentim_TF_score") %>%
select(-score)
results_HHLL <- list()
results_HLLH <- list()
res_n <- list()
n_tile = 5
results <- NULL
for(temp_dim in ESG_dimensions){
#temp_dim = "Overall"
print(temp_dim)
#  results <- NULL
for(temp_year  in seq(2003,2019)){
#temp_year = 2015
print(temp_year)
temp  <- df_merged %>%
filter(year == temp_year) %>%
filter(type == temp_dim) %>%
transmute(ticker, companyname, ind_desc
, rank_asset4 = rank(asset4), rank_text = rank(value)
, ntile_a4 = ntile(rank_asset4, 5)
, ntile_txt= ntile(rank_text, 5)
)
a4Low_txtLow <- temp %>% filter(ntile_a4 == 1, ntile_txt == 1) %>% pull(ticker)
a4High_txtHigh <- temp %>% filter(ntile_a4 == n_tile, ntile_txt == n_tile) %>% pull(ticker)
a4High_txtLow <- temp %>% filter(ntile_a4 == n_tile , ntile_txt == 1) %>% pull(ticker)
a4Low_txtHigh <- temp %>% filter(ntile_a4 == 1, ntile_txt == n_tile) %>% pull(ticker)
# Create portfolios
port_dispH <- m_crsp %>%
filter( ticker %in% c(a4High_txtLow, a4Low_txtHigh ), year == temp_year +1) %>%
arrange(ticker) %>% group_by(date) %>% summarise(ret_dispH = mean(ret, na.rm = T))
port_dispL <- m_crsp %>%
filter( ticker %in% c(a4Low_txtLow, a4High_txtHigh ), year == temp_year +1) %>%
arrange(ticker) %>% group_by(date) %>% summarise(ret_dispL = mean(ret, na.rm = T))
temp_res <- bind_cols(
port_dispH
, port_dispL %>% select(-date)) %>%
mutate(type = temp_dim)
results <- bind_rows(temp_res, results)
} }
results <- results %>%
pivot_longer(cols = -c(date, type), names_to = "port") %>%
mutate(port = str_remove_all(port, "ret_"))
ports <- unique(results$port)
temp2_reg <- list()
se_nw <- list()
for(temp_dim in ESG_dimensions){
temp_reg <- results %>%
filter(type == temp_dim) %>%
filter(port == "dispH" | port == "dispL" ) %>%
pivot_wider(names_from = port) %>%
rename(long =3, short = 4) %>%
transmute(date, type, retLS = long - short) %>%
mutate(date = floor_date(date, "month")) %>% left_join(ff3_factors) %>%
select(-date, -RF,-type) %>%
lm(retLS ~ ., .)
temp_se <- sqrt(diag(NeweyWest(temp_reg)))
temp2_reg[[temp_dim]] <- temp_reg
se_nw[[temp_dim]] <- temp_se
}
stargazer(temp2_reg, se = se_nw, type = "text", title = "HHLL - HLLH",  column.labels = names(temp2_reg))
library(tidyverse)
library(stargazer)
library(xtable)
scores_full <-  readRDS("../Data/scores_yearly_matched.RDS")
scores_wide <-  readRDS("../Data/scores_yearly_matched_wide.RDS")
df_aggregated_scores <- scores_full
df_aggregated_scores <-  df_aggregated_scores %>%
group_by(year, type, score) %>%
summarise(value =  mean(value))
df_aggregated_scores$type <- factor(df_aggregated_scores$type, levels=c("Overall","E", "S", "G"))
df_aggregated_scores$score <- factor(df_aggregated_scores$score, levels=c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score",  "sentim_TF_LM_score","sentim_LM_score"))
df_aggregated_scores$score <- factor(df_aggregated_scores$score,
levels=c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score",  "sentim_TF_LM_score","sentim_LM_score"))
scores_full <-  readRDS("../Data/scores_yearly_matched.RDS")
scores_wide <-  readRDS("../Data/scores_yearly_matched_wide.RDS")
df_aggregated_scores <- scores_full
df_aggregated_scores <-  df_aggregated_scores %>%
group_by(year, type, score) %>%
summarise(value =  median(value))
df_aggregated_scores$type <- factor(df_aggregated_scores$type, levels=c("Overall","E", "S", "G"))
df_aggregated_scores$score <- factor(df_aggregated_scores$score,
levels=c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score",  "sentim_TF_LM_score","sentim_LM_score"))
# For labeling scores -----------------------------------------------------
scores_names <- list(
'tf_score'="tf_score",
'tf_idf_score'="tfidf_score",
'sentim_TF_score'= expression(paste("sentim_tf_score"^{"(FB)"}) ),
'sentim_score' = expression(paste("sentim_tfidf_score"^{"(FB)"}) ),
'sentim_TF_LM_score'= expression(paste("sentim_tf_score"^{"(LM)"}) ),
'sentim_LM_score' =expression(paste("sentim_tfidf_score"^{"(LM)"}) )
)
scores_labeller <- function(variable,value){
return(scores_names[value])
}
df_aggregated_scores %>% ggplot(aes(x = year, y = value, color = type, group = type)) +
geom_line() +
geom_smooth(se = F, method = "lm")+
facet_wrap(~score, scales = "free", ncol = 1,
labeller = scores_labeller
) +
theme_minimal(base_size = 18) +
theme(legend.title = element_blank())+
scale_color_manual(values = c("grey50", "#00BA38" , "#619CFF","#F8766D")) +
labs(#title = "Mean Scores over Time"
x = " ", y = " ")
ggsave(filename = "../Plots/median_scores_year.png", width = 7, height = 15, bg = "white")
df_aggregated_scores
scores_full %>%
drop_na(asset4) %>%
group_by(year, type) %>%
summarize(asset4 = median(asset4)) %>%
mutate(across(type, factor, levels = c("Overall", "E", "S", "G")) ) %>%
ggplot(aes(x = year, y = asset4, color = type)) +
geom_line() +
geom_smooth(se = F, method = "lm") +
theme_bw(base_size = 15) +
theme(legend.title = element_blank())+
scale_color_manual(values = c("grey50", "#00BA38" , "#619CFF","#F8766D")) +
labs(#title = "Mean Scores over Time"
x = " ", y = " ")
scores_full %>%
drop_na(asset4) %>%
group_by(year, type) %>%
summarize(asset4 = median(asset4)) %>%
mutate(across(type, factor, levels = c("Overall", "E", "S", "G")) ) %>%
ggplot(aes(x = year, y = asset4, color = type)) +
geom_line() +
geom_smooth(se = F, method = "lm") +
theme_bw(base_size = 15) +
theme(legend.title = element_blank())+
scale_color_manual(values = c("grey50", "#00BA38" , "#619CFF","#F8766D")) +
labs(#title = "Mean Scores over Time"
x = " ", y = " ")
ggsave(filename = "../Plots/median_asset4_year.png", width = 14, height = 7, bg = "white")
scores_full %>%
drop_na(asset4) %>%
group_by(year, type) %>%
summarize(asset4 = median(asset4)) %>%
mutate(across(type, factor, levels = c("Overall", "E", "S", "G")) ) %>%
ggplot(aes(x = year, y = asset4, color = type)) +
geom_line() +
geom_smooth(se = F, method = "lm") +
theme_bw(base_size = 18) +
theme(legend.title = element_blank())+
scale_color_manual(values = c("grey50", "#00BA38" , "#619CFF","#F8766D")) +
labs(#title = "Mean Scores over Time"
x = " ", y = " ")
ggsave(filename = "../Plots/median_asset4_year.png", width = 14, height = 7, bg = "white")
df_merged <- readRDS("../Data/scores_yearly_matched.RDS") %>% drop_na(asset4, ind_desc)
results <- NULL
for(jj in esg_dimensions){
temp2 <- df_merged %>% filter(type == jj)
for(mm in scores){
temp3 <- temp2 %>% filter(score == mm)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
res <- tibble( score = mm
, type = jj
, cor = temp_cor$estimate
, CI_low = temp_cor$conf.int[1]
, CI_high =  temp_cor$conf.int[2]
, p = temp_cor$p.value)
results <- bind_rows(res, results)
}
}
results$type <- factor(results$type, levels=c("Overall", "E", "S", "G"))
results %>% mutate(star = case_when(p <= 0.01 ~ "***"
,p > 0.01 & p <= 0.05 ~ "**"
,p > 0.05 & p <= 0.1 ~ "*"
,TRUE ~ " "
)
, rho = paste0(round(cor,2)," ", star)
) %>%
select(score, type, rho) %>% pivot_wider(names_from = type, values_from = rho) %>%
select(score, Overall, E, S, G) %>% mutate(id = c(4,3,6,5,2,1)) %>% arrange(id) %>% select(-id) %>%
startup(.,type = "latex", summary = F, rownames = F) %>%
cat(.)
# By FF 12 industry --------------------------------------------------------------------
df_merged <- df_merged %>% filter(!is.na(ind_desc))
results <- NULL
# By FF 12 industry --------------------------------------------------------------------
df_merged <- df_merged %>% filter(!is.na(ind_desc))
results <- NULL
for( ii in unique(df_merged$ind_desc)){
temp <- df_merged %>% filter(ind_desc == ii)
for(mm in c("tf_score", "tf_idf_score", "sentim_score", "sentim_LM_score", "sentim_TF_score", "sentim_TF_LM_score")){
temp3 <- temp %>% filter(score == mm)
n = nrow(temp3)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
#ci <- spearman_CI(temp_cor$estimate,n)
res <- tibble(ind_desc = ii
, score = mm
, type = "all"
, cor = temp_cor$estimate
#, CI_low = ci[1]
#, CI_high =  ci[2]
#, p = temp_cor$p.value
)
results <- bind_rows(res, results)}
for(jj in c("Overall","E", "S", "G")){
temp2 <- temp %>% filter(type == jj)
for(mm in c("tf_score", "tf_idf_score", "sentim_score", "sentim_LM_score", "sentim_TF_score", "sentim_TF_LM_score")){
temp3 <- temp2 %>% filter(score == mm)
n <- nrow(temp3)
temp_cor <- cor.test(temp3 %>% pull(value), temp3 %>% pull(asset4), method = "spearman")
#ci <- spearman_CI(cor = temp_cor$estimate, n = n)
res <- tibble(ind_desc = ii
, score = mm
, type = jj
, cor = temp_cor$estimate
#, CI_low = ci[1]
#, CI_high =  ci[2]
#, p = temp_cor$p.value
)
results <- bind_rows(res, results)
}
}
}
results$type <- factor(results$type, levels=c("all","Overall", "E", "S", "G"))
results <- results %>% filter(!(score %in% c("sentim_LM_score", "sentim_TF_LM_score")))
results$score <- factor(results$score, levels = c("tf_score", "tf_idf_score", "sentim_TF_score", "sentim_score"))
score_names <- c("tf_score", "tfidf_score"
, expression(paste("sentim_tf_score"^{"(FB)"}))
,expression(paste("sentim_tfidf_score"^{"(FB)"})) )
results %>% filter(type == "all") %>%
mutate(type = "All") %>%
ggplot(aes(x = cor, y = reorder(ind_desc,cor), fill = score  )   )+
geom_bar( stat = "identity", position = "dodge") +
#geom_errorbar(aes(xmin= CI_low, xmax= CI_high), position = position_dodge(.9), width = 0.5, size=.1, alpha = .5)+
facet_wrap(~type, scales = "free") +
labs(x = "Spearman Correlation", y = "" ) +
geom_vline(xintercept = 0, linetype = "dashed" ) +
scale_fill_hue(labels = score_names) +
theme_bw(base_size = 18) +
theme(legend.title = element_blank(), legend.text.align = 0)
results
df_merged
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc, type) %>%
count()
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc) %>%
count()
df_merged %>%
distinct(refinitiv_code, .keep_all = T)
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc) %>%
count() %>%
stargazer(.,summary = F)
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc) %>%
count() %>%
stargazer(.,summary = F, rownames = F)
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc) %>%
count() %>%
stargazer(.,summary = F, rownames = F)
library(tidyverse)
library(stargazer)
library(xtable)
# By FF 12 industry --------------------------------------------------------------------
df_merged <- df_merged %>% filter(!is.na(ind_desc))
df_merged <- readRDS("../Data/scores_yearly_matched.RDS") %>% drop_na(asset4)
df_merged <- readRDS("../Data/scores_yearly_matched.RDS") %>% drop_na(asset4, ind_desc)
# By FF 12 industry --------------------------------------------------------------------
df_merged <- df_merged %>% filter(!is.na(ind_desc))
df_merged %>%
distinct(refinitiv_code, .keep_all = T) %>%
group_by(ind_desc) %>%
count() %>%
stargazer(.,summary = F, rownames = F)
